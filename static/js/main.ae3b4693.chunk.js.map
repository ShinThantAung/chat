{"version":3,"sources":["serviceWorker.js","login/style.js","login/login.js","signup/style.js","signup/signup.js","NewChat/styles.js","NewChat/newChat.js","chatlist/styles.js","chatlist/chatList.js","ChatView/styles.js","ChatView/chatView.js","ChatTextBox/styles.js","ChatTextBox/chatTextBox.js","dashboard/styles.js","dashboard/dashboard.js","index.js"],"names":["Boolean","window","location","hostname","match","styles","theme","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","form","submit","noAccountHeader","signUpLink","textDecoration","color","fontWeight","errorText","textAlign","firebase","require","LoginComponent","userTyping","whichInput","event","setState","email","target","value","password","submitLogin","e","a","preventDefault","auth","signInWithEmailAndPassword","state","then","props","history","push","err","serverError","console","log","classes","this","className","maxWidth","CssBaseline","Paper","Typography","component","variant","onSubmit","FormControl","required","fullWidth","margin","InputLabel","htmlFor","Input","autoComplete","autoFocus","onChange","id","type","FormControlLabel","control","Checkbox","label","Button","alert","to","React","Component","withStyles","hasAccountHeader","logInLink","SignupComponent","passwordConfirmation","formIsValid","submitSignup","createUserWithEmailAndPassword","authRes","userObj","user","friends","messages","firestore","collection","doc","set","dbErr","signupError","authErr","position","top","left","input","NewChatComponent","inputType","username","message","submitNewChat","userExists","chatExists","goToChat","createChat","buildDocKey","currentUser","sort","join","newChatSubmitFn","sendTo","goToChatFn","docKey","get","chat","exists","usersSnapshot","docs","map","_doc","data","includes","root","backgroundColor","palette","background","height","boxShadow","flexGrow","menuroot","menuButton","title","listItem","cursor","newChatBtn","borderRadius","unreadMessage","right","fabButton","zIndex","extendedIcon","ChatListComponent","userIsSender","length","sender","userEmail","newChat","newChatBtnFn","selectChat","index","selectChatFn","signOut","submitMessage","msg","chats","selectedChat","users","filter","_usr","update","FieldValue","arrayUnion","timestamp","Date","now","receiverHasRead","friend","newChatBtnClicked","newChatFormVisible","newChatSubmit","chatObj","AppBar","Toolbar","IconButton","edge","aria-label","onClick","List","_chat","_index","key","ListItem","selected","selectedChatIndex","ListItemAvatar","Avatar","alt","_user","split","ListItemText","primary","secondary","Fragment","substring","ListItemIcon","Divider","Fab","size","content","overflow","boxSizing","overflowY","userSent","float","clear","wordWrap","friendSent","chatHeader","fontSize","paddingTop","ChatViewComponent","componentDidMount","container","document","getElementById","scrollTo","scrollHeight","componentDidUpdate","undefined","_msg","sendBtn","chatTextBoxContainer","bottom","chatTextBox","ChatTextBoxComponent","keyCode","chatText","messageValid","txt","replace","userClickedInput","userClickedInputFn","submitMessageFn","TextField","placeholder","onKeyUp","onFocus","loadingroot","justify","signOutBtn","DashboardComponent","chatIndex","messageRead","usersInChat","find","every","indexOf","clickedMessageWhereNotSender","componentWillMount","onAuthStateChanged","where","onSnapshot","res","CircularProgress","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","routing","path","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ae3b4693.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const styles = theme => ({\n    main: {\n      width: 'auto',\n      display: 'block', // Fix IE 11 issue.\n      marginLeft: theme.spacing.unit * 3,\n      marginRight: theme.spacing.unit * 3,\n      [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n        width: 400,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n    },\n    paper: {\n      marginTop: theme.spacing.unit * 8,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing.unit,\n    },\n    submit: {\n      marginTop: theme.spacing.unit * 3,\n    },\n    noAccountHeader: {\n      width: '100%'\n    },\n    signUpLink: {\n      width: '100%',\n      textDecoration: 'none',\n      color: '#303f9f',\n      fontWeight: 'bolder'\n    },\n    errorText: {\n      color: 'red',\n      textAlign: 'center'\n    }\n  });\n  \n  export default styles;","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport styles from './style';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst firebase = require(\"firebase\");\n\nclass LoginComponent extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      serverError: false\n    };\n  }\n\n  render() {\n\n    const { classes } = this.props;\n\n    return (\n      <main className={classes.main} maxWidth=\"xs\">\n        <CssBaseline/>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log In!\n          </Typography>\n          <form onSubmit={(e) => this.submitLogin(e)} className={classes.form}>\n            <FormControl required fullWidth margin='normal'>\n              <InputLabel htmlFor='login-email-input'>Enter Your Email</InputLabel>\n              <Input autoComplete='email' autoFocus onChange={(e) => this.userTyping('email', e)} id='login-email-input'></Input>\n            </FormControl>\n            <FormControl required fullWidth margin='normal'>\n              <InputLabel htmlFor='login-password-input'>Enter Your Password</InputLabel>\n              <Input autoComplete=\"current-password\" type=\"password\" onChange={(e) => this.userTyping('password', e)} id='login-password-input'></Input>\n            </FormControl>\n            <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n            <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>Log In</Button>\n          </form>\n          { this.state.serverError ? \n            <Typography className={alert} component='h5' variant='h6'>\n              Incorrect Login Information\n            </Typography> :\n            null\n          }\n          <h5 className={classes.noAccountHeader}>Don't Have An Account?</h5>\n          <Link className={classes.signUpLink} to='/signup'>Sign Up!</Link>\n        </Paper>\n      </main>\n    );\n  }\n\n  userTyping = (whichInput, event) => {\n    switch (whichInput) {\n      case 'email':\n        this.setState({ email: event.target.value });\n        break;\n\n      case 'password':\n        this.setState({ password: event.target.value });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  submitLogin = async (e) => {\n    e.preventDefault(); // This is to prevent the automatic refreshing of the page on submit.\n\n    await firebase\n      .auth()\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\n      .then(() => {\n        this.props.history.push('/dashboard');\n      }, err => {\n        this.setState({ serverError: true });\n        console.log('Error logging in: ', err);\n      });\n  };\n\n}\n\nexport default withStyles(styles)(LoginComponent);\n\n\n\n","const styles = theme => ({\n    main: {\n      width: 'auto',\n      display: 'block', // Fix IE 11 issue.\n      marginLeft: theme.spacing.unit * 3,\n      marginRight: theme.spacing.unit * 3,\n      [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n        width: 400,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n    },\n    paper: {\n      marginTop: theme.spacing.unit * 8,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing.unit,\n    },\n    submit: {\n      marginTop: theme.spacing.unit * 3,\n    },\n    hasAccountHeader: {\n      width: '100%'\n    },\n    logInLink: {\n      width: '100%',\n      textDecoration: 'none',\n      color: '#303f9f',\n      fontWeight: 'bolder'\n    },\n    errorText: {\n      color: 'red',\n      textAlign: 'center'\n    }\n  });\n  \n  export default styles;","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport styles from './style';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nconst firebase = require(\"firebase\");\n\nclass SignupComponent extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      passwordConfirmation: null,\n      signupError: ''\n    };\n  }\n\n  render() {\n\n    const { classes } = this.props;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline/>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up!\n          </Typography>\n          <form onSubmit={(e) => this.submitSignup(e)} className={classes.form}>\n            <FormControl required fullWidth margin='normal'>\n              <InputLabel htmlFor='signup-email-input'>Enter Your Email</InputLabel>\n              <Input autoComplete='email' autoFocus onChange={(e) => this.userTyping('email', e)} id='signup-email-input'></Input>\n            </FormControl>\n            <FormControl required fullWidth margin='normal'>\n              <InputLabel htmlFor='signup-password-input'>Create A Password</InputLabel>\n              <Input type=\"password\" onChange={(e) => this.userTyping('password', e)} id='signup-password-input'></Input>\n            </FormControl>\n            <FormControl required fullWidth margin='normal'>\n              <InputLabel htmlFor='signup-password-confirmation-input'>Confirm Your Password</InputLabel>\n              <Input type=\"password\" onChange={(e) => this.userTyping('passwordConfirmation', e)} id='signup-password-confirmation-input'></Input>\n            </FormControl>\n            <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>Submit</Button>\n          </form>\n          { \n            this.state.signupError ? \n            <Typography className={classes.errorText} component='h5' variant='h6'>\n              {this.state.signupError}\n            </Typography> :\n            null\n          }\n          <h5 className={classes.hasAccountHeader}>Already Have An Account?</h5>\n          <Link className={classes.logInLink} to='/login'>Log In!</Link>\n        </Paper>\n      </main>\n    );\n  }\n\n  userTyping = (whichInput, event) => {\n    switch (whichInput) {\n      case 'email':\n        this.setState({ email: event.target.value });\n        break;\n\n      case 'password':\n        this.setState({ password: event.target.value });\n        break;\n\n      case 'passwordConfirmation':\n        this.setState({ passwordConfirmation: event.target.value });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  formIsValid = () => this.state.password === this.state.passwordConfirmation;\n\n  submitSignup = (e) => {\n    e.preventDefault(); // This is to prevent the automatic refreshing of the page on submit.\n\n    if(!this.formIsValid()) {\n      this.setState({ signupError: 'Passwords do not match' });\n      return;\n    }\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\n      .then(authRes => {\n        const userObj = {\n          email: authRes.user.email,\n          friends: [],\n          messages: []\n        };\n        firebase\n          .firestore()\n          .collection('users')\n          .doc(this.state.email)\n          .set(userObj)\n          .then(() => {\n            this.props.history.push('/dashboard');\n        }, dbErr => {\n          console.log('Failed to add user to the database: ', dbErr);\n          this.setState({ signupError: 'Failed to add user' });\n        });\n    }, authErr => {\n      console.log('Failed to create user: ', authErr);\n      this.setState({ signupError: 'Failed to add user' });\n    });\n  };\n}\n\nexport default withStyles(styles)(SignupComponent);","const styles = theme => ({\n    main: {\n      width: 'auto',\n      display: 'block', // Fix IE 11 issue.\n      marginLeft: theme.spacing.unit * 3,\n      marginRight: theme.spacing.unit * 3,\n      [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n        width: 400,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n    },\n    paper: {\n      padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n      position: 'absolute',\n      width: '350px',\n      top: '50px',\n      left: 'calc(50% + 150px - 175px)'\n    },\n    input: {\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing.unit,\n    },\n    submit: {\n      marginTop: theme.spacing.unit * 3\n    },\n    errorText: {\n      color: 'red',\n      textAlign: 'center'\n    }\n  });\n  \n  export default styles;","import React from 'react';\nimport { FormControl, InputLabel, Input, Button, Paper, withStyles, CssBaseline, Typography } from '@material-ui/core';\nimport styles from './styles';\nconst firebase = require(\"firebase\");\n\nclass NewChatComponent extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      username: null,\n      message: null\n    };\n  }\n\n  render() {\n\n    const { classes } = this.props;\n\n    return(\n      <main className={classes.main}>\n        <CssBaseline/>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">Send A Message!</Typography>\n          <form className={classes.form} onSubmit={(e) => this.submitNewChat(e)}>\n            <FormControl fullWidth>\n              <InputLabel htmlFor='new-chat-username'>\n                  Enter Your Friend's Email\n              </InputLabel>\n              <Input required \n                className={classes.input}\n                autoFocus \n                onChange={(e) => this.userTyping('username', e)} \n                id='new-chat-username'>\n              </Input>\n            </FormControl>\n            <FormControl fullWidth>\n              <InputLabel htmlFor='new-chat-message'>\n                  Enter Your Message\n              </InputLabel>\n              <Input required \n                className={classes.input}\n                onChange={(e) => this.userTyping('message', e)} \n                id='new-chat-message'>\n              </Input>\n            </FormControl>\n            <Button fullWidth variant='contained' color='primary' className={classes.submit} type='submit'>Send</Button>\n          </form>\n          {\n            this.state.serverError ? \n            <Typography component='h5' variant='h6' className={classes.errorText}>\n              Unable to locate the user\n            </Typography> :\n            null\n          }\n        </Paper>\n      </main>\n    );\n  }\n\n  componentWillMount() {\n    if(!firebase.auth().currentUser)\n      this.props.history.push('/login');\n  }\n\n  userTyping = (inputType, e) => {\n    switch (inputType) {\n      case 'username':\n        this.setState({ username: e.target.value });\n        break;\n      \n      case 'message':\n        this.setState({ message: e.target.value });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  submitNewChat = async (e) => {\n    e.preventDefault();\n    const userExists = await this.userExists();\n    if(userExists) {\n      const chatExists = await this.chatExists();\n      chatExists ? this.goToChat() : this.createChat();\n    }\n  }\n\n  buildDocKey = () => [firebase.auth().currentUser.email, this.state.username].sort().join(':');\n\n  createChat = () => {\n    this.props.newChatSubmitFn({\n      sendTo: this.state.username,\n      message: this.state.message\n    });\n  }\n\n  goToChat = () => this.props.goToChatFn(this.buildDocKey(), this.state.message);\n\n  chatExists = async () => {\n    const docKey = this.buildDocKey();\n    const chat = await \n      firebase\n      .firestore()\n      .collection('chats')\n      .doc(docKey)\n      .get();\n    console.log(chat.exists);\n    return chat.exists;\n  }\n  userExists = async () => {\n    const usersSnapshot = await \n    firebase\n      .firestore()\n      .collection('users')\n      .get();\n    const exists = usersSnapshot\n      .docs\n        .map(_doc => _doc.data().email)\n        .includes(this.state.username);\n    this.setState({ serverError: !exists });\n    return exists;\n  }\n}\n\nexport default withStyles(styles)(NewChatComponent);","const styles = theme => ({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      height:'100%',\n      position: 'absolute',\n      left: '0',\n      width: 'auto',\n      boxShadow: '1px 1px 1px gray',\n      flexGrow: 1\n    },\n    menuroot: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    listItem: {\n      \n      // marginBottom: theme.spacing(2),\n      cursor: 'pointer',\n      // backgroundColor:'#DADEE5'\n    },\n    newChatBtn: {\n      borderRadius: '0px'\n    },\n    unreadMessage: {\n      color: 'green',\n      position: 'absolute',\n      top: '0',\n      right: '5px'\n    },\n    margin: {\n      margin: theme.spacing(1),\n      // paddingleft:\"30px;\n    },\n    fabButton: {\n      position: 'absolute',\n      zIndex: 1,\n      top: -5,\n      left: 0,\n      right: 0,\n      margin: '0 auto',\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n  });\n  \n  export default styles;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './styles';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport NotificationImportant from '@material-ui/icons/NotificationImportant';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\n\n// import MenuIcon from '@material-ui/icons/Menu';\n  \nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nconst firebase = require(\"firebase\");\nclass ChatListComponent extends React.Component {\n\n  render() {\n\n    const { classes } = this.props;\n\n    if(this.props.chats.length > 0) {\n      return(\n\n        \n        <div className={classes.root}>\n\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <AccountCircleIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            \n          </Typography>\n          <Button color=\"inherit\" onClick={this.signOut}>LogOut</Button>\n        </Toolbar>\n      </AppBar>\n \n            <List>\n              {\n                this.props.chats.map((_chat, _index) => {\n                  return (\n                    <div key={_index}>\n                      <ListItem onClick={() => this.selectChat(_index)} \n                        className={classes.listItem} \n                        selected={this.props.selectedChatIndex === _index} \n                        alignItems=\"flex-start\">\n                        <ListItemAvatar>\n                          <Avatar alt=\"Remy Sharp\">{_chat.users.filter(_user => _user !== this.props.userEmail)[0].split('')[0]}</Avatar>\n                        </ListItemAvatar>\n                        <ListItemText \n                          primary={_chat.users.filter(_user => _user !== this.props.userEmail)[0]}\n                          secondary={\n                            <React.Fragment>\n                              <Typography component='span'\n                                color='textPrimary'>\n                                  {_chat.messages[_chat.messages.length - 1].message.substring(0, 30) + ' ...'}\n                              </Typography>\n                            </React.Fragment>\n                          }/>\n                          {\n                            _chat.receiverHasRead === false && !this.userIsSender(_chat) ? \n                            <ListItemIcon><NotificationImportant className={classes.unreadMessage}></NotificationImportant></ListItemIcon> :\n                            null\n                          }\n                      </ListItem>\n                      <Divider/>\n                    </div>\n                  )\n                })\n              }\n            </List>\n            {/* <div className={classes.root}> */}\n            <Fab size=\"medium\" className={classes.fabButton} color=\"secondary\" aria-label=\"add\" onClick={this.newChat}>\n            <AddIcon />\n            </Fab>\n            {/* </div> */}\n            {/* <Button variant=\"contained\" \n              fullWidth \n              color='primary' \n              onClick={this.newChat} \n              className={classes.newChatBtn}>\n                New Message\n            </Button>  */}\n        </div>\n      );\n    } else {\n      return(\n        <div className={classes.root}>\n          <Button variant=\"contained\" \n            fullWidth \n            color='primary' \n            onClick={this.newChat} \n            className={classes.newChatBtn}>\n              New Message\n          </Button>\n          <List></List>\n        </div>\n      );\n    }\n  }\n  userIsSender = (chat) => chat.messages[chat.messages.length - 1].sender === this.props.userEmail;\n  newChat = () => this.props.newChatBtnFn();\n  selectChat = (index) => this.props.selectChatFn(index);\n  signOut = () => firebase.auth().signOut();\n\n  submitMessage = (msg) => {\n    const docKey = this.buildDocKey(this.state.chats[this.state.selectedChat]\n      .users\n      .filter(_usr => _usr !== this.state.email)[0])\n    firebase\n      .firestore()\n      .collection('chats')\n      .doc(docKey)\n      .update({\n        messages: firebase.firestore.FieldValue.arrayUnion({\n          sender: this.state.email,\n          message: msg,\n          timestamp: Date.now()\n        }),\n        receiverHasRead: false\n      });\n  }\n\n  // Always in alphabetical order:\n  // 'user1:user2'\n  buildDocKey = (friend) => [this.state.email, friend].sort().join(':');\n\n  newChatBtnClicked = () => this.setState({ newChatFormVisible: true, selectedChat: null });\n\n  newChatSubmit = async (chatObj) => {\n    const docKey = this.buildDocKey(chatObj.sendTo);\n    await \n      firebase\n        .firestore()\n        .collection('chats')\n        .doc(docKey)\n        .set({\n          messages: [{\n            message: chatObj.message,\n            sender: this.state.email\n          }],\n          users: [this.state.email, chatObj.sendTo],\n          receiverHasRead: false\n        })\n    this.setState({ newChatFormVisible: false });\n    this.selectChat(this.state.chats.length - 1);\n  }\n}\n\nexport default withStyles(styles)(ChatListComponent);\n\n\n","const styles = theme => ({\n\n    content: {\n      height: 'calc(100vh - 100px)',\n      overflow: 'auto',\n      padding: '20px',\n      marginLeft: '300px',\n      boxSizing: 'border-box',\n      overflowY: 'scroll',\n      top: '50px',\n      width: 'calc(100% - 300px)',\n      position: 'absolute'\n    },\n  \n    userSent: {\n      float: 'right',\n      clear: 'both',\n      padding: '20px',\n      boxSizing: 'border-box',\n      wordWrap: 'break-word',\n      marginTop: '10px',\n      backgroundColor: '#5399F3',\n      color: 'white',\n      width: '300px',\n      borderRadius: '10px'\n    },\n  \n    friendSent: {\n      float: 'left',\n      clear: 'both',\n      padding: '20px',\n      boxSizing: 'border-box',\n      wordWrap: 'break-word',\n      marginTop: '10px',\n      backgroundColor: '#EDF2F3',\n      color: 'black',\n      width: '300px',\n      borderRadius: '10px'\n    },\n  \n    chatHeader: {\n      width: 'calc(100% - 301px)',\n      height: '30px',\n      backgroundColor: '#344195',\n      position: 'fixed',\n      marginLeft: '301px',\n      fontSize: '10px',\n      textAlign: 'center',\n      color: 'white',\n      paddingTop: '10px',\n      boxSizing: 'border-box'\n    }\n  \n  });\n  \n  export default styles;","import React from 'react';\nimport styles from './styles';\nimport { withStyles } from '@material-ui/core/styles';\n\nclass ChatViewComponent extends React.Component {\n\n  componentDidMount = () => {\n    const container = document.getElementById('chatview-container');\n    if(container)\n      container.scrollTo(0, container.scrollHeight);\n  }\n  componentDidUpdate = () => {\n    const container = document.getElementById('chatview-container');\n    if(container)\n      container.scrollTo(0, container.scrollHeight);\n  }\n\n  render() {\n\n    const { classes } = this.props;\n\n    if(this.props.chat === undefined) {\n      return(<main className={classes.content}></main>);\n    } else if(this.props.chat !== undefined) {\n      return(\n        <div>\n          <div className={classes.chatHeader}>\n            Your conversation with {this.props.chat.users.filter(_usr => _usr !== this.props.user)[0]}\n          </div>\n          <main id='chatview-container' className={classes.content}>\n            {\n              this.props.chat.messages.map((_msg, _index) => {\n                return(\n                <div key={_index} className={_msg.sender === this.props.user ? classes.userSent : classes.friendSent}>\n                  {_msg.message}\n                </div>\n                )\n              })\n            }\n          </main>\n        </div>\n      );\n    } else {\n      return (<div className='chatview-container'>Loading...</div>);\n    }\n  }\n}\n\nexport default withStyles(styles)(ChatViewComponent);","\nconst styles = theme => ({\n\n    sendBtn: {\n      color: 'blue',\n      cursor: 'pointer',\n      '&:hover': {\n        color: 'gray'\n      }\n    },\n  \n    chatTextBoxContainer: {\n      position: 'absolute',\n      bottom: '15px',\n      left: '315px',\n      boxSizing: 'border-box',\n      overflow: 'auto',\n      width: 'calc(100% - 300px - 50px)'\n    },\n  \n    chatTextBox: {\n      width: 'calc(100% - 25px)'\n    }\n  \n  });\n  \n  export default styles;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Send from '@material-ui/icons/Send';\nimport styles from './styles';\nimport { withStyles } from '@material-ui/core/styles';\n\nclass ChatTextBoxComponent extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      chatText: ''\n    };\n  }\n\n  render() {\n\n    const { classes } = this.props;\n\n    return(\n      <div className={classes.chatTextBoxContainer}>\n        <TextField\n          placeholder='Type your message..' \n          onKeyUp={(e) => this.userTyping(e)}\n          id='chattextbox' \n          className={classes.chatTextBox}\n          onFocus={this.userClickedInput}>\n        </TextField>\n        <Send onClick={this.submitMessage} className={classes.sendBtn}></Send>\n      </div>\n    );\n  }\n  userTyping = (e) => e.keyCode === 13 ? this.submitMessage() : this.setState({ chatText: e.target.value });\n  messageValid = (txt) => txt && txt.replace(/\\s/g, '').length;\n  userClickedInput = () => this.props.userClickedInputFn();\n  submitMessage = () => {\n    if(this.messageValid(this.state.chatText)) {\n      this.props.submitMessageFn(this.state.chatText);\n      document.getElementById('chattextbox').value = '';\n    }\n  }\n}\n\nexport default withStyles(styles)(ChatTextBoxComponent);","const styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  loadingroot: {\n     justify :\"center\"\n    \n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n    signOutBtn: {\n      position: 'absolute',\n      bottom: '0px',\n      left: '0px',\n      width: '300px',\n      borderRadius: '0px',\n      backgroundColor: '#227092',\n      height: '35px',\n      boxShadow: '0px 0px 2px black',\n      color: 'white'\n    }\n  });\n  \n  export default styles;","import React from 'react';\nimport NewChatComponent from '../NewChat/newChat';\nimport ChatListComponent from '../chatlist/chatList';\nimport ChatViewComponent from '../ChatView/chatView.js';\nimport ChatTextBoxComponent from '../ChatTextBox/chatTextBox';\nimport styles from './styles';\nimport {  withStyles } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst firebase = require(\"firebase\");\n\n// I need to investigate why sometimes\n// two messages will send instead of just\n// one. I dont know if there are two instances\n// of the chat box component or what...\n\n// I will be using both .then and async/await\n// in this tutorial to give a feel of both.\n\nclass DashboardComponent extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      selectedChat: null, \n      newChatFormVisible: false,\n      email: null,\n      friends: [],\n      chats: []\n    };\n  }\n\n  render() {\n\n    const { classes } = this.props;\n\n    if(this.state.email) {\n      return(\n        <div className='dashboard-container' id='dashboard-container'>\n          <ChatListComponent history={this.props.history} \n            userEmail={this.state.email} \n            selectChatFn={this.selectChat} \n            chats={this.state.chats} \n            selectedChatIndex={this.state.selectedChat}\n            newChatBtnFn={this.newChatBtnClicked}>\n          </ChatListComponent>\n          {\n            this.state.newChatFormVisible ? null : <ChatViewComponent \n              user={this.state.email} \n              chat={this.state.chats[this.state.selectedChat]}>\n            </ChatViewComponent>\n          }\n          { \n            this.state.selectedChat !== null && !this.state.newChatFormVisible ? <ChatTextBoxComponent userClickedInputFn={this.messageRead} submitMessageFn={this.submitMessage}></ChatTextBoxComponent> : null \n          }\n          {\n            this.state.newChatFormVisible ? <NewChatComponent goToChatFn={this.goToChat} newChatSubmitFn={this.newChatSubmit}></NewChatComponent> : null\n          }\n          {/* <Button onClick={this.signOut} className={classes.signOutBtn}>LogOut</Button> */}\n        </div>\n      );\n    } else {\n      return(<div className={classes.loadingroot}>\n        {/* <CircularProgress /> */}\n        <CircularProgress />\n      </div>);\n    }\n  }\n\n  signOut = () => firebase.auth().signOut();\n\n  submitMessage = (msg) => {\n    const docKey = this.buildDocKey(this.state.chats[this.state.selectedChat]\n      .users\n      .filter(_usr => _usr !== this.state.email)[0])\n    firebase\n      .firestore()\n      .collection('chats')\n      .doc(docKey)\n      .update({\n        messages: firebase.firestore.FieldValue.arrayUnion({\n          sender: this.state.email,\n          message: msg,\n          timestamp: Date.now()\n        }),\n        receiverHasRead: false\n      });\n  }\n\n  // Always in alphabetical order:\n  // 'user1:user2'\n  buildDocKey = (friend) => [this.state.email, friend].sort().join(':');\n\n  newChatBtnClicked = () => this.setState({ newChatFormVisible: true, selectedChat: null });\n\n  newChatSubmit = async (chatObj) => {\n    const docKey = this.buildDocKey(chatObj.sendTo);\n    await \n      firebase\n        .firestore()\n        .collection('chats')\n        .doc(docKey)\n        .set({\n          messages: [{\n            message: chatObj.message,\n            sender: this.state.email\n          }],\n          users: [this.state.email, chatObj.sendTo],\n          receiverHasRead: false\n        })\n    this.setState({ newChatFormVisible: false });\n    this.selectChat(this.state.chats.length - 1);\n  }\n\n  selectChat = async (chatIndex) => {\n    await this.setState({ selectedChat: chatIndex, newChatFormVisible: false });\n    this.messageRead();\n  }\n\n  goToChat = async (docKey, msg) => {\n    const usersInChat = docKey.split(':');\n    const chat = this.state.chats.find(_chat => usersInChat.every(_user => _chat.users.includes(_user)));\n    this.setState({ newChatFormVisible: false });\n    await this.selectChat(this.state.chats.indexOf(chat));\n    this.submitMessage(msg);\n  }\n\n  // Chat index could be different than the one we are currently on in the case\n  // that we are calling this function from within a loop such as the chatList.\n  // So we will set a default value and can overwrite it when necessary.\n  messageRead = () => {\n    const chatIndex = this.state.selectedChat;\n    const docKey = this.buildDocKey(this.state.chats[chatIndex].users.filter(_usr => _usr !== this.state.email)[0]);\n    if(this.clickedMessageWhereNotSender(chatIndex)) {\n      firebase\n        .firestore()\n        .collection('chats')\n        .doc(docKey)\n        .update({ receiverHasRead: true });\n    } else {\n      console.log('Clicked message where the user was the sender');\n    }\n  }\n\n  clickedMessageWhereNotSender = (chatIndex) => this.state.chats[chatIndex].messages[this.state.chats[chatIndex].messages.length - 1].sender !== this.state.email;\n\n  componentWillMount = () => {\n      firebase.auth().onAuthStateChanged(async _usr => {\n        if(!_usr)\n          this.props.history.push('/login');\n        else {\n          await firebase\n            .firestore()\n            .collection('chats')\n            .where('users', 'array-contains', _usr.email)\n            .onSnapshot(async res => {\n              const chats = res.docs.map(_doc => _doc.data());\n              await this.setState({\n                email: _usr.email,\n                chats: chats,\n                friends: []\n              });\n            })\n        }\n    });\n  }\n}\n\nexport default withStyles(styles)(DashboardComponent);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\nimport LoginComponent  from './login/login'\nimport SignupComponent from './signup/signup'\nimport DashboardComponent from './dashboard/dashboard';\n\nconst firebase = require(\"firebase\")\nrequire(\"firebase/firestore\")\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDS-knD91grk11ncjxKIDIJ8kg5f3WMQKo\",\n  authDomain: \"chatapp-41400.firebaseapp.com\",\n  databaseURL: \"https://chatapp-41400.firebaseio.com\",\n  projectId: \"chatapp-41400\",\n  storageBucket: \"chatapp-41400.appspot.com\",\n  messagingSenderId: \"83377735851\",\n  appId: \"1:83377735851:web:d4c4535f522b1b1be78fee\",\n  measurementId: \"G-HQYVDFKZ9G\"\n})\n\nconst routing =(\n  <Router>\n    <div id='routing-container'>\n      <Route path='/chat' component={ LoginComponent  }></Route>\n      <Route path='/login' component={ LoginComponent  }></Route>\n      <Route path='/signup' component={ SignupComponent  }></Route>\n      <Route path='/dashboard' component={ DashboardComponent}></Route>\n      \n    </div>\n  </Router>\n);\nReactDOM.render(\n  routing,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}